#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
#include <iomanip>
using namespace std;

double factorial(int x, int result = 1) {
  if (x == 1) return result; 
  else if (x ==0) return 1;
  else return factorial(x - 1, x * result);
}

int main() {
    double s, f, l, n, f1, f2, f3, f4, p, ans; 
    double sum1, sum2 = 0;
    cin >> l;
    cin >> n;
    
    //number of rejects
     int r = 2;  
    //probability of rejection
    s = l/100;
    //probability of success
    f = 1-s;
    
    //PART 1: No more than two
    for(int i = 0; i <= 2; i++){
        
    //the factorial part
    f1 = factorial(n);
    f2 = factorial(i);
    f3 = factorial(n-i);        
    f4 = f1/(f2*f3);
       
    //the power part
    p = pow(s,i) * pow(f, n-i);
            
    //multiplication of both factorial and power part
    ans = f4*p; 
        
    sum1 += ans;          
    } 
    
    //PART 2: Atleast 2 rejects
     for(int i = 2; i <= 10; i++){
        
    //the factorial part
    f1 = factorial(n);
    f2 = factorial(i);
    f3 = factorial(n-i);        
    f4 = f1/(f2*f3);
       
    //the power part
    p = pow(s,i) * pow(f, n-i);
            
    //multiplication of both factorial and power part
    ans = f4*p; 
        
    sum2 += ans;          
    } 
    
    cout <<fixed<<setprecision(3)<< sum1 <<endl;
    cout <<fixed<<setprecision(3)<< sum2 <<endl;
    
    return 0;
}

