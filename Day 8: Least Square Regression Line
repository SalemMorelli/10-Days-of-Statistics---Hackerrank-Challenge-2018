#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
#include <iomanip>
#include <numeric>
using namespace std;


int main() {
    
    int score, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10;
    double pearson, b, Y, sum, a;
    
    vector<int> x = {95, 85, 80, 70, 60};
    vector<int> y = {85, 95, 70, 65, 70};
    
    //calculation of mean of set x and set y
    double sum_x = accumulate(x.begin(), x.end(), 0.0);
    double mean_x = sum_x / x.size();   
    double sum_y = accumulate(y.begin(), y.end(), 0.0);
    double mean_y = sum_y / y.size(); 
    //calculation of standard deviations for x and y
    double sq_sum_x = inner_product(x.begin(), x.end(), x.begin(), 0.0);
    double sdev_x = sqrt(sq_sum_x / x.size() - mean_x * mean_x);
    double sq_sum_y = inner_product(y.begin(), y.end(), y.begin(), 0.0);
    double sdev_y = sqrt(sq_sum_y / y.size() - mean_y * mean_y);
    
    //pearson correlation coefficient calculation
    for(int i = 0; i < x.size(); i++){
    sum += ((x[i] - mean_x)*(y[i]-mean_y));
    }  
    pearson = sum/(x.size()*sdev_x*sdev_y);
    
    //calculation of b
    b = pearson * sdev_y/sdev_x;
    //calculation of a
    a = mean_y - b*mean_x;
    
    //calculation Y when X = 80 using the obtained line of best-fit
    Y = a + b*80;
      
    cout<<fixed<<setprecision(3)<<Y<<endl;
    return 0;
}

