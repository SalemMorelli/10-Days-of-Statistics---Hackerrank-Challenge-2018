#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
#include <iomanip>
using namespace std;

double median(vector<int> W, int size, int start){   
    double med; 
    //when count is odd
    if(size % 2 != 0){  
        med = W[size/2 + start];  
    }
    else{
        med = (W[(size/2) + start] + W[(size/2 - 1) + start])/2 ; 
    }    
    return med;
}

int main() {
    int x, y, freq;
    double Q1, Q3;
    int sum = 0;
    cin >> x;
    vector<int> W(x);
    
    for(int i = 0; i < x; i++){
        cin >> W[i];
    }
    for(int i = 0; i < x; i++){
        cin >> freq;
        while(freq > 1){
            W.push_back(W[i]);  //why you should use vector over array
            freq--;
        }
    }
    sort(W.begin(), W.end());  
    int size = W.size();
    Q1 = median(W, size/2, 0);
    if(size%2 == 0){
    Q3 = median(W, size/2, size/2);
    }
    else{
    Q3 = median(W, size/2, size/2+1);   
    }
    cout<<fixed<<setprecision(1)<<Q3 - Q1<<endl;
    
    return 0;
}
